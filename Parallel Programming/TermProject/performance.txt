computing an average
----------------------
the program is not scalable

run times in microseconds:
		  |		order of matrix
comm_size | 1000 | 2000 | 4000 | 8000
	1	  | 42.09 | 81.83 | 252.65 | 669.60
	2	  | 35.99 | 52.91 | 176.56 | 399.71
	4	  | 21.24 | 47.08 | 46.48 | 221.23
	8	  | 71.59 | 91.46 | 198.02 | 198.64
	
speedups:
		  |		order of matrix
comm_size | 1000 | 2000 | 4000 | 8000
	1	  | 1.00 | 1.00 | 1.00 | 1.00
	2	  | 1.17 | 1.55 | 1.43 | 1.68
	4	  | 1.98 | 1.74 | 5.44 | 3.03
	8	  | 0.59 | 0.89 | 1.28 | 3.37
	
efficiences:
		  |		order of matrix
comm_size | 1000 | 2000 | 4000 | 8000
	1	  | 1.00 | 1.00 | 1.00 | 1.0 
	2	  | 0.59 | 0.78 | 0.72 | 0.84
	4	  | 0.50 | 0.44 | 1.36 | 0.76
	8	  | 0.07 | 0.11 | 0.16 | 0.42
	
computing a % of operation
----------------------------
the program is not scalable

run times in microseconds:
		  |		order of matrix
comm_size | 1000 | 2000 | 4000 | 8000
	1	  | 48.27 | 101.04 | 291.55 | 830.07
	2	  | 30.23 | 65.19 | 156.37 | 457.21
	4	  | 21.72 | 44.24 | 72.62 | 190.82
	8	  | 73.87 | 124.67 | 129.16 | 178.78
	
speedups:
		  |		order of matrix
comm_size | 1000 | 2000 | 4000 | 8000
	1	  | 1.00 | 1.00 | 1.00 | 1.00
	2	  | 1.60 | 1.55 | 1.86 | 1.82
	4	  | 2.22 | 2.28 | 4.01 | 4.35
	8	  | 0.65 | 0.81 | 2.26 | 4.64
	
efficiences:
		  |		order of matrix
comm_size | 1000 | 2000 | 4000 | 8000
	1	  | 1.00 | 1.00 | 1.00 | 1.00
	2	  | 0.80 | 0.77 | 0.93 | 0.91
	4	  | 0.56 | 0.57 | 1.00 | 1.09
	8	  | 0.08 | 0.10 | 0.28 | 0.58